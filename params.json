{"name":"node-tistory","tagline":"Tistory API client module","body":"node-tistory\r\n============\r\n\r\n***node-tistory***는 [Tistory](http://tistory.com)의 오픈 API를 사용하기 위한 Node.js 모듈이다.\r\n\r\n\r\nInstall global module\r\n======================\r\n***node-tistory***는 global로 설치하기 위해서 다음과 같이 `npm install -g`로 설치할 수 있다.\r\n\r\n```\r\nnpm install -g node-tistory\r\n```\r\n\r\n글로벌 설치한 후 `tistory` 명령어를 사용할 수 있다.\r\n```\r\ntistory -help\r\n```\r\n\r\nInstall local module\r\n====================\r\n\r\n```\r\nnpm install node-tistory\r\n```\r\nlocal module로 설치할 경우 다음과 같이 사용할 수 있다.\r\n```javascript\r\nvar Tistory = require('node-tistory');\r\n```\r\n\r\nGlobal configuration file\r\n=========================\r\n***node-tistory***는 `$HOME/.tistory.json` 파일을 글로벌 설정 파일로 읽어들인다.\r\n***node-tistory***를 사용할 때 필요한 옵션정보를 `.tistory.json`에 미리 저장해두면 항상 이 설정 파일을 먼저 읽어서 옵션정보로 설정한다.\r\n\r\n\r\n```bash\r\necho '{\r\n    \"targetUrl\": \"Tistory URL\",\r\n    \"access_token\": \"Tistory API access_token\",\r\n    \"output\": \"json\"\r\n}' > ~/.tistory.json\r\n```\r\n\r\nTistory API\r\n============\r\nTistory에서 제공하고 있는 [오픈 API 가이드](http://www.tistory.com/guide/api/oauth) 를 참고하면 된다.\r\n\r\nnode-tistory API interface\r\n==========================\r\n***node-tistory*** 에서는 Tistory의 오픈 API를 간단하게 바로 사용할 수 있도록 메소드 형태의 interface를 제공하고 있다.\r\n\r\n\r\n| 모듈 | 인터페이스 | Tistory API | 설명 |\r\n|-----|-------|---------------|---|\r\n|blog|info|/apis/blog/info|블로그 정보|\r\n|post|list|/apis/post/list|글 목록|\r\n||read|/apis/post/read|글 보기|\r\n||write|/apis/post/write|글 쓰기|\r\n||modify|/apis/post/modify|글 수정|\r\n||attach|/apis/post/attach|파일첨부|\r\n|category|list|/apis/category/list|분류 목록|\r\n||find||분류 검색|\r\n\r\n모든 interface 메소드는 params, callback을 인자값으로 사용한다. params는 Object 형태이고 callback은 `err`,`body`,`res` 값을 받는 함수 형태이다.\r\nparams의 `key`는 Tistory 오픈 API의 ***Request Parameter***의 이름과 동일하다.\r\n\r\ne.g. 티스토리 블로그 http://blog.saltfactory.net 정보 보기\r\n\r\n```javascript\r\nvar params = {\r\n  targetUrl:'blog.satlfactory.net'\r\n};\r\n\r\nvar callback = function(err, body, res){\r\n  console.log(body);\r\n};\r\n\r\ntistory.blog.info(params, callback);\r\n```\r\n\r\ne.g. http://blog.saltfactory.net의 글 목록보기\r\n```javascript\r\nvar params = {\r\n  page: 1,\r\n  count: 10\r\n};\r\n\r\ntistory.post.list(params, function(err, body, res){\r\n  console.log(body);\r\n});\r\n\r\n```\r\n\r\nnode-tistory interface parameters\r\n=================================\r\n***node-tistory***의 인터페이스의 파라미터는 Object 형태로 지정한다.\r\n```javascript\r\nvar params = {\r\n  'targetUrl':'blog.saltfactory.net'\r\n};\r\n```\r\n\r\n### tistory.blog.info (params, callback)\r\n\r\n| params | 값 | 설명 | 필요 |\r\n|---------|-----|-----|-----|\r\n| access_token | String | OAuth 2.0 인증 후 획득한 access_token | 필수 |\r\n| targetUrl | String| http://saltfactory.tistory.com 과 같이 1차 도메인 경우 ***saltfactory***, http://blog.saltfactory.net 과 같이 2차 도메인일 경우 ***blog.saltfactory.net*** | 필수 |\r\n| output | 'json','xml' | 기본값 'json' | 옵션 |\r\n| 없음 | 없음 | 파라미터 없이 콜백함수만 사용 가능 | 없음 |\r\n\r\n### tistory.post.list (params, callback)\r\n\r\n|params|값|설명|필요|\r\n|---------|-----|-----|-----|\r\n|access_token|String| OAuth 2.0 인증 후 획득한 access_token|필수|\r\n|targetUrl|String| 블로그 URL |필수|\r\n|output|'json','xml'| 기본값 'json'|옵션|\r\n|page|Number| 해당 페이지 글 목록, 기본값 1 |옵션|\r\n|count|1~30| 페이지당 글 갯수, 기본값 10 |옵션|\r\n|categoryId|Number|분류에 해당하는 글 목록, 기본값 전체|옵션|\r\n|sort|'id' or 'date'| 'id'는 글번호, 'date'는 작성날짜, 기본값 `id`|옵션|\r\n\r\n### tistory.post.read (params, callback)\r\n\r\n|params|값|설명|필요|\r\n|---------|-----|-----|-----|\r\n|access_token|String| OAuth 2.0 인증 후 획득한 access_token|필수|\r\n|targetUrl|String| 블로그 URL |필수|\r\n|postId|Number| 글 번호 |필수|\r\n|output|'json','xml'| 기본값 'json'|옵션|\r\n\r\n\r\n### tistory.post.write (params, callback)\r\n\r\n|params|값|설명|필요|\r\n|---------|-----|-----|-----|\r\n|access_token|String| OAuth 2.0 인증 후 획득한 access_token|필수|\r\n|targetUrl|String| 블로그 URL |필수|\r\n|title|String| 글 제목 |필수|\r\n|content | String | 글 내용|옵션|\r\n|visibility| 0,1,2,3|0:비공개, 1:보호, 2:공개, 3:발행, 생략시 0|옵션|\r\n|published|String|UNIX_TIMESTAMP() 예약발송|옵션|\r\n|tag|String|,를 사용하여 여러개 태그 문자열|옵션|\r\n|output|'json','xml'| 기본값 'json'|옵션|\r\n\r\n### tistory.post.modify (params, callback)\r\n\r\n|params|값|설명|필요|\r\n|---------|-----|-----|-----|\r\n|access_token|String| OAuth 2.0 인증 후 획득한 access_token|필수|\r\n|targetUrl|String| 블로그 URL |필수|\r\n|postId|Number | 수정할 글 번호 | 필수 |\r\n|title|String| 글 제목 |필수|\r\n|content | String | 글 내용|옵션|\r\n|visibility| 0,1,2,3|0:비공개, 1:보호, 2:공개, 3:발행, 생략시 0|옵션|\r\n|published|String|UNIX_TIMESTAMP() 예약발송|옵션|\r\n|tag|String|,를 사용하여 여러개 태그 문자열|옵션|\r\n|output|'json','xml'| 기본값 'json'|옵션|\r\n\r\n### tistory.post.attach (params, callback)\r\n\r\n|params|값|설명|필요|\r\n|---------|-----|-----|-----|\r\n|access_token|String| OAuth 2.0 인증 후 획득한 access_token|필수|\r\n|targetUrl|String| 블로그 URL |필수|\r\n|uploadedfile|String| 파일경로 |필수|\r\n|output|'json','xml'| 기본값 'json'|옵션|\r\n\r\n### tistory.category.list (params, callback)\r\n\r\n|params|값|설명|필요|\r\n|---------|-----|-----|-----|\r\n|access_token|String| OAuth 2.0 인증 후 획득한 access_token|필수|\r\n|targetUrl|String| 블로그 URL |필수|\r\n|output|'json','xml'| 기본값 'json'|옵션|\r\n\r\n\r\n### tistory.category.find (params, callback)\r\n|params|값|설명|필요|\r\n|---------|-----|-----|-----|\r\n|access_token|String| OAuth 2.0 인증 후 획득한 access_token|필수|\r\n|targetUrl|String| 블로그 URL |필수|\r\n|name|String| 분류명 |필수|\r\n|output|'json','xml'| 기본값 'json'|옵션|\r\n\r\n> Tistory의 모든 API는 access_token, targetUrl 그리고 output 파라미터를 사용하기 때문에\r\n> ***node-tistory***의 global configuration file인 `$HOME/.tistory.json`에 다음과 같이 저장해두면 파라미터로 설정하지 않아도 된다.\r\n\r\n```javascript\r\n{\r\n  \"targetUrl\": \"blog.saltfactory.net\",\r\n  \"access_token\": \"access_token\",\r\n  \"output\": \"json\"\r\n}\r\n\r\n```\r\n```javascript\r\nvar params = {\r\n  page:1,\r\n  count:10\r\n};\r\n\r\ntistory.post.list(params, function(err,body){\r\n  console.log(body);\r\n});\r\n```\r\n\r\ntistory command\r\n================\r\n***node-tistory***를 `npm install -g`로 설치를 하면 `tistory` 명령어를 사용할 수 있다.\r\n만약 `$HOME/.tistory.json` 파일에 설정이 저장된 상태라고 생각하면 명령어 사용은 다음과 같다.\r\n\r\n|명령어 옵션 | 설명 |\r\n|---------|-----|\r\n| -help, --h| 도움말 |\r\n| -pretty | indent 추가해서 JSON 프린트|\r\n\r\n| 파라미터 옵션 | 설명 |\r\n|---------|-----|\r\n| -파라미터명 |파라미터의 이름 앞에 -를 붙이고 뒤에 값을 지정|\r\n\r\n\r\n\r\n### tistory.blog.info\r\n\r\n```\r\ntistory blog info -pretty\r\n```\r\n\r\n### tistory.post.list\r\n\r\n```\r\ntistory post list -page 1 -count 10 -output json\r\n```\r\n\r\n### tistory.post.read\r\n```\r\ntistory post read 105 --pretty\r\n```\r\n\r\n### tistory.post.write\r\n```\r\ntistory post write -title 안녕하세요 -content 테스트입니다. -tag 태그1,태그2\r\n```\r\n\r\n### tistory.post.modify\r\n```\r\ntistory post write -postId 105 -title 안녕하세요 -content 테스트입니다. -tag 태그1,태그2\r\n```\r\n\r\n### tistory.post.attach\r\n```\r\ntistory post attach -file /Users/saltfactory/Documents/test.png\r\n```\r\n\r\n### tistory.category.list\r\n```\r\ntistory category list --pretty\r\n```\r\n\r\n### tistory.category.find\r\n```\r\ntistory category find Node.js --pretty\r\n```\r\n\r\nCopyright and License\r\n=====================\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014 SungKwang Song\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}